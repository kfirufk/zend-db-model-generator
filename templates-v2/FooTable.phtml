namespace <?= $this->_namespace ?>\Model;

use Zend\Db\TableGateway\AbstractTableGateway,
    Zend\Db\Adapter\Adapter,
    Zend\Db\ResultSet\ResultSet;

class <?=$this->_className?>Table extends AbstractTableGateway
{
    protected $table ='<?=$this->_tbname?>';
    protected $tableName ='<?=$this->_tbname?>';

    public function __construct(Adapter $adapter)
    {
        $this->adapter = $adapter;
        $this->resultSetPrototype = new ResultSet(new <?=$this->_className?>);

        $this->initialize();
    }

    public function fetchAll()
    {
        $resultSet = $this->select();
        return $resultSet;
    }

    public function get<?=$this->_className?>($id)
    {
        $id  = (int) $id;
        $rowset = $this->select(array('id' => $id));
        $row = $rowset->current();
        if (!$row) {
            throw new \Exception("Could not find row $id");
        }
        return $row;
    }

    public function save<?=$this->_className?>(<?=$this->_className?> $<?=$this->_tbname?>)
    {
        $data = array(<?php foreach ($this->columns as $column): ?>
            '<?= $column->field?>' => $<?=$this->_tbname?>-><?= $column->capital?>,
            <?php endforeach; ?>
        );

        $id = (int)$<?=$this->_tbname?>->id;
        if ($id == 0) {
            $this->insert($data);
        } else {
            if ($this->get<?=$this->_className?>($id)) {
                $this->update($data, array('id' => $id));
            } else {
                throw new \Exception('Form id does not exit');
            }
        }
    }

    public function add<?=$this->_className?>($artist, $title)
    {
        $data = array(<?php foreach ($this->columns as $column): ?>
            '<?= $column->field?>' => $<?= $column->field?>,
            <?php endforeach; ?>
        );
        $this->insert($data);
    }

    public function update<?=$this->_className?>($id, $artist, $title)
    {
        $data = array(
            'artist' => $artist,
            'title'  => $title,
        );
        $this->update($data, array('id' => $id));
    }

    public function delete<?=$this->_className?>($id)
    {
        $this->delete(array('id' => $id));
    }

}
